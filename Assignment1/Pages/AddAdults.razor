@page "/AddAdults"
@using Microsoft.AspNetCore.Components
@attribute [Authorize(Policy = "MustBeAdmin")]
@using Assignment1.Model
@using Assignment1.Data
@inject IAdultsData AdultsData
@inject NavigationManager NavigationManager
<h3>AddPeople</h3>
<EditForm Model="@person" OnValidSubmit="@AddNewAdult">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="form-group"> Adult id:<br/>
        <InputNumber @bind-Value="person.Id"/>        
    </div>
    <div class="form-group"> Adult first name:<br/>
        <InputText @bind-Value="person.FirstName"/>        
    </div>
    <div class="form-group"> Adult last name:<br/>
        <InputText @bind-Value="person.LastName"/>        
    </div>
    <div class="form-group"> Adult eye color:<br/>
        <InputText @bind-Value="person.EyeColor"/>        
    </div>
    <div class="form-group"> Adult hair color:<br/>
        <InputText @bind-Value="person.HairColor"/>        
    </div>
    <div class="form-group"> Adult age:<br/>
        <InputNumber @bind-Value="person.Age"/>        
    </div>
    <div class="form-group"> Adult weight:<br/>
        <InputNumber @bind-Value="person.Weight"/>        
    </div>
    <div class="form-group"> Adult height:<br/>
        <InputNumber @bind-Value="person.Height"/>        
    </div>
    <div class="form-group"> Adult sex:<br/>
        <select class="form-group selectpicker" @onchange="arg=>SetGender(arg)" style="width:50px">
            <option>M</option>
            <option>F</option>
            <option>Other</option>
        </select>
    </div>



    <div class="form-group"> Job Title:<br/>
        <InputText @bind-Value="job.JobTitle"/>        
    </div>
    <div class="form-group"> Job Salary:<br/>
            <InputNumber @bind-Value="job.Salary"/>        
        </div>
    <p class="action">
        <button class="btn btn-outline-dark" type="submit">Create</button>
    </p>
    
</EditForm>

@code {
    
    private Person person = new Adult();
    private Job job = new Job();
    private Adult adult = new Adult();
    private string sex ="";
    
    
    

    private void AddNewAdult()
    {
        adult = (Adult)person;
        adult.JobTitle = job;
        adult.Sex = sex;

        AdultsData.addAdultAsync(adult);
        NavigationManager.NavigateTo("/ViewAdults");
    }

    private void SetGender(ChangeEventArgs changeEventArgs)
    {
        sex = changeEventArgs.Value.ToString();
    }

}